///////////////////////////////////////////////////////////////////////////////
#ifndef CAMERAMATRIX_H
#define CAMERAMATRIX_H

#include "stdincludes.h"

//////////////////////////////////////////////////////////////////////////////
/// Class to represent a projective camera matrix
//////////////////////////////////////////////////////////////////////////////
class CameraMatrix : public Eigen::Matrix<double,3,4> {
public:
  CameraMatrix();

  EigenMatrix<double,3,3> M1();	// inverse of M, where P=[M|t]
  
};




///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
inline CameraMatrix::CameraMatrix()
{
  p1[0][0] = 1.0;
  p1[0][1] = 0.0;
  p1[0][2] = 0.0;
  p1[1][0] = 0.0;
  p1[1][1] = 1.0;
  p1[1][2] = 0.0;
  p1[2][0] = 0.0;
  p1[2][1] = 0.0;
  p1[2][2] = 1.0;
  t[0] = 0.0;
  t[1] = 0.0;
  t[2] = 0.0;
}


#endif
